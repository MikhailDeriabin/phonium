{
    "openapi": "3.0.2",
    "info": {
        "title": "Phonium",
        "version": "1.0.0",
        "description": "An REST API for Phonium web app"
    },
    "paths": {
        "/contact": {
            "get": {
                "tags": [
                    "contact"
                ],
                "parameters": [
                    {
                        "examples": {
                            "1": {
                                "value": "2"
                            }
                        },
                        "name": "page",
                        "description": "Number of the page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "examples": {
                            "1": {
                                "value": "10"
                            }
                        },
                        "name": "pageSize",
                        "description": "Size of the page or how much contacts should be returned per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "id",
                                                    "phone"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier of the contact",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "nullable": true,
                                                        "description": "Name of the contact",
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "description": "Phone number of the contact",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "nullable": true,
                                                        "description": "Additional details about the contact",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of contacts",
                                                    "type": "integer"
                                                },
                                                "page": {
                                                    "description": "Current page number",
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "description": "Number of contacts per page",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": 1,
                                            "name": "Michael Scott",
                                            "phone": "123-456-7890",
                                            "description": "Regional Manager of Dunder Mifflin. World's best boss (self-proclaimed)."
                                        }
                                    ],
                                    "metadata": {
                                        "total": 20,
                                        "page": 1,
                                        "pageSize": 10
                                    }
                                }
                            }
                        },
                        "description": "List of contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    }
                },
                "summary": "Get all contacts",
                "description": "Get a list of all created contacts"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContract"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "contact"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier of the created contact",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "nullable": true,
                                            "description": "Name of the contact",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "Phone number of the contact",
                                            "type": "string"
                                        },
                                        "description": {
                                            "nullable": true,
                                            "description": "Additional details about the contact",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Contact created successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                },
                "summary": "Create a new contact",
                "description": "Creates a new contact and returns the created contact with its ID."
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContact",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Unique identifier of the contact to update",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "nullable": true,
                                        "description": "Updated name of the contact",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Updated phone number of the contact",
                                        "type": "string"
                                    },
                                    "description": {
                                        "nullable": true,
                                        "description": "Updated additional details about the contact",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "contact"
                ],
                "responses": {
                    "204": {
                        "description": "Contact updated successfully, no content returned"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    }
                },
                "summary": "Update an existing contact",
                "description": "Updates an existing contact using the ID provided in the request body."
            }
        },
        "/contact/{id}": {
            "get": {
                "tags": [
                    "contact"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier of the contact",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "nullable": true,
                                            "description": "Name of the contact",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "Phone number of the contact",
                                            "type": "string"
                                        },
                                        "description": {
                                            "nullable": true,
                                            "description": "Additional details about the contact",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful response with contact details"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    }
                },
                "summary": "Get a contact by ID",
                "description": "Retrieves a single contact by its unique ID."
            },
            "delete": {
                "tags": [
                    "contact"
                ],
                "responses": {
                    "204": {
                        "description": "Contact deleted successfully, no content returned"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    }
                },
                "summary": "Delete a contact by ID",
                "description": "Deletes a contact by its unique ID."
            },
            "parameters": [
                {
                    "examples": {
                        "1": {
                            "value": "1"
                        }
                    },
                    "name": "id",
                    "description": "id of the contact",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "CreateContract": {
                "description": "Data for creating a new contact",
                "required": [
                    "phone"
                ],
                "properties": {
                    "name": {
                        "nullable": true,
                        "description": "Name of the contact",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "example": "Jim Halpert"
                    },
                    "phone": {
                        "description": "Phone number of the contact",
                        "maxLength": 31,
                        "minLength": 4,
                        "pattern": "^\\+?[0-9 ]+$",
                        "type": "string",
                        "example": "+1 234 567 890"
                    },
                    "description": {
                        "nullable": true,
                        "description": "Additional details about the contact",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "example": "Sales representative at Dunder Mifflin."
                    }
                }
            },
            "UpdateContact": {
                "description": "Data for the updating a contact",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the contact",
                        "minimum": 0,
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "nullable": true,
                        "description": "Name of the contact",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "example": "Jim Halpert"
                    },
                    "phone": {
                        "description": "Phone number of the contact",
                        "maxLength": 31,
                        "minLength": 4,
                        "pattern": "^\\+?[0-9 ]+$",
                        "type": "string",
                        "example": "+1 234 567 890"
                    },
                    "description": {
                        "nullable": true,
                        "description": "Additional details about the contact",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "example": "Sales representative at Dunder Mifflin."
                    }
                }
            }
        },
        "responses": {
            "BadRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "reason": {
                                                "description": "Reason for validation failure",
                                                "enum": [
                                                    "NOT_STRING",
                                                    "REQUIRED",
                                                    "NOT_NUMBER"
                                                ],
                                                "type": "string",
                                                "example": "NOT_STRING"
                                            },
                                            "field": {
                                                "description": "Field where the error occurred",
                                                "type": "string",
                                                "example": "name"
                                            },
                                            "value": {
                                                "description": "Provided incorrect value",
                                                "example": 23
                                            },
                                            "message": {
                                                "description": "Optional error message",
                                                "type": "string",
                                                "example": "Field name must be a string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Validation errors occurred"
            },
            "NotFoundError": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "reason": {
                                                "description": "Reason for the error",
                                                "enum": [
                                                    "NOT_FOUND"
                                                ],
                                                "type": "string",
                                                "example": "NOT_FOUND"
                                            },
                                            "field": {
                                                "description": "Field where the error occurred",
                                                "type": "string",
                                                "example": "id"
                                            },
                                            "value": {
                                                "description": "Provided incorrect value",
                                                "example": 23
                                            },
                                            "message": {
                                                "description": "Optional error message",
                                                "type": "string",
                                                "example": "Item with provided id is not found"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Item(s) can not be found"
            }
        }
    },
    "tags": [
        {
            "name": "contact",
            "description": "Contact info"
        }
    ]
}